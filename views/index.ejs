<html>

<meta charset="utf-8"/>

<link rel=stylesheet href="/lib/codemirror.css">
<script src="/lib/codemirror.js"></script>
<script src="/mode/xml/xml.js"></script>
<script src="/mode/javascript/javascript.js"></script>

<style>
.button {
  display: inline-block;
  border-radius: 4px;
  border: none;
  color: #FFFFFF;
  text-align: center;
  font-size: 18px;
  padding: 20px;
  width: 150px;
  transition: all 0.5s;
  cursor: pointer;
  margin: 3px;
}

.button span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

.button span:after {
  content: '\00bb';
  position: absolute;
  opacity: 0;
  top: 0;
  right: -20px;
  transition: 0.5s;
}

.button:hover span {
  padding-right: 25px;
}

.button:hover span:after {
  opacity: 1;
  right: 0;
}
</style>
<style>
	.CodeMirror { height: 100%; border: 2px solid #ddd; }
	.CodeMirror-scroll { max-height: 100%; }
	.CodeMirror pre { padding-left: 7px; line-height: 1.25; }
	.banner { background: #ffc; padding: 6px; border-bottom: 2px solid silver; text-align: center }
</style>
<script src="https://cdn.socket.io/socket.io-1.4.5.js"></script>
<script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
<script src="/js/skulpt.js" type="text/javascript"></script>
<script src="/js/skulpt-stdlib.js" type="text/javascript"></script>
<script src="/js/python.js" type="text/javascript"></script>
<script>
	var socket;
	var editor; 
	var cursor;
	var output;
	function connect(){
		output = document.getElementById('output')
		editor = CodeMirror.fromTextArea(
			document.getElementById('demotext'), 
			{ mode: { name: "python",
				version: 3,
				singleLineStringErrors: true },
			lineNumbers: true,
			indentUnit:4 }
		);
		socket = io();
		console.log("session id: ", '<%= sessId %>');
		socket.emit('sessId', '<%= sessId %>');
		socket.on('newCode', (data) => {
			editor.setValue(data['code']);
			editor.setCursor(cursor);
		});

		function keyhandler(){
			setTimeout(function(){
				cursor = editor.getCursor();
				updateCode();
			}, 10);
		}
		function keypresshandler(e){
			keyhandler()
		}
		function keydownhandler(e){
			if(	e.key == 'Backspace' ||
				e.key == 'Enter')
				keyhandler();
		}

		document.addEventListener('keypress', keypresshandler);
		document.addEventListener('keydown', keydownhandler);
	}
	function updateCode(){
		socket.emit('updateCode', { code: editor.getValue() } );
	}
	function retrieveCode(){
		socket.emit('retrieveCode');
	}
	function outf(text){
		console.log(text)
		output.innerHTML += text + '<br>'
	}
	function builtinRead(x) {
		if (Sk.builtinFiles === undefined || Sk.builtinFiles["files"][x] === undefined)
			throw "File not found: '" + x + "'";
		return Sk.builtinFiles["files"][x];
	}
	function runCode(){
		var prog = editor.getValue();
		console.log('program',prog)
		output.innerHTML = ''
		Sk.pre = "output"
		Sk.configure({output: outf, read:builtinRead});
		var myPromise = Sk.misceval.asyncToPromise(function() {
			return Sk.importMainWithBody("<stdin>", false, prog, true);
		});
		myPromise.then(function(mod) {
			console.log('success');
		},
			function(err){
				console.log(err);
		});
		socket.emit('run', (data)=>{
			console.log(data)
		});
	}
	function help(){
		socket.emit('help');
	}
</script>
<body onload='connect()'>
<div style="width: 50%; float: left; background-color: Aqua;">
	<textarea id='demotext'>
for i in range(50):
	print(i)
	</textarea>
</div>
<div style="overflow: scroll; width: 50%; float: left; background-color: grey;">
	<button class='button' style="background-color: #3daae0" onclick='help()'>Call for Help</button>
	<button class='button' style="background-color: #45AF50" onclick='runCode()'>Run Code</button>
	<button class='button' style="background-color: #45AF50" onclick='output.innerHTML = ""'>Clear Output</button>
	<h2>Code Output</h2>
	<p style="height: 75%;" id='output'></p>
</div>
</body>
